(function() {
  var bcv_parser;

  bcv_parser = require("../../js/xh_bcv_parser.js").bcv_parser;

  describe("Parsing", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.options.osis_compaction_strategy = "b";
      return p.options.sequence_combination_strategy = "combine";
    });
    it("should round-trip OSIS references", function() {
      var bc, bcv, bcv_range, book, books, i, len, results;
      p.set_options({
        osis_compaction_strategy: "bc"
      });
      books = ["Gen", "Exod", "Lev", "Num", "Deut", "Josh", "Judg", "Ruth", "1Sam", "2Sam", "1Kgs", "2Kgs", "1Chr", "2Chr", "Ezra", "Neh", "Esth", "Job", "Ps", "Prov", "Eccl", "Song", "Isa", "Jer", "Lam", "Ezek", "Dan", "Hos", "Joel", "Amos", "Obad", "Jonah", "Mic", "Nah", "Hab", "Zeph", "Hag", "Zech", "Mal", "Matt", "Mark", "Luke", "John", "Acts", "Rom", "1Cor", "2Cor", "Gal", "Eph", "Phil", "Col", "1Thess", "2Thess", "1Tim", "2Tim", "Titus", "Phlm", "Heb", "Jas", "1Pet", "2Pet", "1John", "2John", "3John", "Jude", "Rev"];
      results = [];
      for (i = 0, len = books.length; i < len; i++) {
        book = books[i];
        bc = book + ".1";
        bcv = bc + ".1";
        bcv_range = bcv + "-" + bc + ".2";
        expect(p.parse(bc).osis()).toEqual(bc);
        expect(p.parse(bcv).osis()).toEqual(bcv);
        results.push(expect(p.parse(bcv_range).osis()).toEqual(bcv_range));
      }
      return results;
    });
    it("should round-trip OSIS Apocrypha references", function() {
      var bc, bcv, bcv_range, book, books, i, j, len, len1, results;
      p.set_options({
        osis_compaction_strategy: "bc",
        ps151_strategy: "b"
      });
      p.include_apocrypha(true);
      books = ["Tob", "Jdt", "GkEsth", "Wis", "Sir", "Bar", "PrAzar", "Sus", "Bel", "SgThree", "EpJer", "1Macc", "2Macc", "3Macc", "4Macc", "1Esd", "2Esd", "PrMan", "Ps151"];
      for (i = 0, len = books.length; i < len; i++) {
        book = books[i];
        bc = book + ".1";
        bcv = bc + ".1";
        bcv_range = bcv + "-" + bc + ".2";
        expect(p.parse(bc).osis()).toEqual(bc);
        expect(p.parse(bcv).osis()).toEqual(bcv);
        expect(p.parse(bcv_range).osis()).toEqual(bcv_range);
      }
      p.set_options({
        ps151_strategy: "bc"
      });
      expect(p.parse("Ps151.1").osis()).toEqual("Ps.151");
      expect(p.parse("Ps151.1.1").osis()).toEqual("Ps.151.1");
      expect(p.parse("Ps151.1-Ps151.2").osis()).toEqual("Ps.151.1-Ps.151.2");
      p.include_apocrypha(false);
      results = [];
      for (j = 0, len1 = books.length; j < len1; j++) {
        book = books[j];
        bc = book + ".1";
        results.push(expect(p.parse(bc).osis()).toEqual(""));
      }
      return results;
    });
    return it("should handle a preceding character", function() {
      expect(p.parse(" Gen 1").osis()).toEqual("Gen.1");
      expect(p.parse("Matt5John3").osis()).toEqual("Matt.5,John.3");
      expect(p.parse("1Ps 1").osis()).toEqual("");
      return expect(p.parse("11Sam 1").osis()).toEqual("");
    });
  });

  describe("Localized book Gen (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Gen (xh)", function() {
      
		expect(p.parse("KwabaseGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KwabasGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KumaGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YeziGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("AbaGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("EkaGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ImiGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IsiGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IziGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KumGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YezGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YooGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("AbGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("EkGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IiGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ImGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IsGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IzGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KaGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KuGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("OoGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YoGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("OGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("UGenesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Genesis 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("Gen 1:1").osis()).toEqual("Gen.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KWABASGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KUMAGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YEZIGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ABAGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("EKAGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IMIGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ISIGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IZIGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KUMGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YEZGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YOOGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ABGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("EKGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IIGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IMGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("ISGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IZGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KAGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KUGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("OOGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("YOGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("IGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("KGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("OGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("UGENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GENESIS 1:1").osis()).toEqual("Gen.1.1")
		expect(p.parse("GEN 1:1").osis()).toEqual("Gen.1.1")
		;
      return true;
    });
  });

  describe("Localized book Exod (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Exod (xh)", function() {
      
		expect(p.parse("KwabaseEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KwabasEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KumaEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YeziEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("AbaEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EkaEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ImiEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IsiEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IziEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KumEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YezEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YooEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("AbEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EkEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IiEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ImEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IsEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IzEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KaEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KuEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("OoEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YoEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("OEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("UEksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Eksodus 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Exod 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("Eks 1:1").osis()).toEqual("Exod.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KWABASEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KUMAEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YEZIEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ABAEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EKAEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IMIEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ISIEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IZIEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KUMEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YEZEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YOOEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ABEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EKEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IIEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IMEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("ISEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IZEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KAEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KUEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("OOEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("YOEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("IEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("KEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("OEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("UEKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EKSODUS 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EXOD 1:1").osis()).toEqual("Exod.1.1")
		expect(p.parse("EKS 1:1").osis()).toEqual("Exod.1.1")
		;
      return true;
    });
  });

  describe("Localized book Bel (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Bel (xh)", function() {
      
		expect(p.parse("Bel 1:1").osis()).toEqual("Bel.1.1")
		;
      return true;
    });
  });

  describe("Localized book Lev (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Lev (xh)", function() {
      
		expect(p.parse("KwabaseLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KwabasLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KumaLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YeziLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("AbaLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("EkaLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ImiLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IsiLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IziLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KumLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YezLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YooLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("AbLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("EkLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IiLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ImLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IsLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IzLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KaLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KuLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("OoLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YoLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ILevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("OLevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ULevitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Levitikus 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("Lev 1:1").osis()).toEqual("Lev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASELEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KWABASLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KUMALEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YEZILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ABALEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("EKALEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IMILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ISILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IZILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KUMLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YEZLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YOOLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ABLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("EKLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IMLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ISLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("IZLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KALEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KULEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("OOLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("YOLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ILEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("KLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("OLEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("ULEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEVITIKUS 1:1").osis()).toEqual("Lev.1.1")
		expect(p.parse("LEV 1:1").osis()).toEqual("Lev.1.1")
		;
      return true;
    });
  });

  describe("Localized book Num (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Num (xh)", function() {
      
		expect(p.parse("KwabaseNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KwabasNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KumaNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YeziNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("AbaNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("EkaNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ImiNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IsiNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IziNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KumNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YezNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YooNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("AbNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("EkNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IiNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ImNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IsNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IzNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KaNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KuNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("OoNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YoNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("INumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ONumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("UNumeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Numeri 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("Num 1:1").osis()).toEqual("Num.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASENUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KWABASNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KUMANUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YEZINUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ABANUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("EKANUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IMINUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ISINUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IZINUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KUMNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YEZNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YOONUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ABNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("EKNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IINUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IMNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ISNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("IZNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KANUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KUNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("OONUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("YONUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("INUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("KNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("ONUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("UNUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NUMERI 1:1").osis()).toEqual("Num.1.1")
		expect(p.parse("NUM 1:1").osis()).toEqual("Num.1.1")
		;
      return true;
    });
  });

  describe("Localized book Sir (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Sir (xh)", function() {
      
		expect(p.parse("Sir 1:1").osis()).toEqual("Sir.1.1")
		;
      return true;
    });
  });

  describe("Localized book Wis (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Wis (xh)", function() {
      
		expect(p.parse("Wis 1:1").osis()).toEqual("Wis.1.1")
		;
      return true;
    });
  });

  describe("Localized book Lam (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Lam (xh)", function() {
      
		expect(p.parse("KwabaseLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KwabasLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KumaLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YeziLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("AbaLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("EkaLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ImiLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IsiLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IziLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KumLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YezLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YooLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("AbLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("EkLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IiLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ImLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IsLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IzLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KaLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KuLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("OoLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YoLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ILilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("OLilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ULilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lilo 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("Lam 1:1").osis()).toEqual("Lam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASELILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KWABASLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KUMALILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YEZILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ABALILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("EKALILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IMILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ISILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IZILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KUMLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YEZLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YOOLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ABLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("EKLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IMLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ISLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("IZLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KALILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KULILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("OOLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("YOLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ILILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("KLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("OLILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("ULILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LILO 1:1").osis()).toEqual("Lam.1.1")
		expect(p.parse("LAM 1:1").osis()).toEqual("Lam.1.1")
		;
      return true;
    });
  });

  describe("Localized book EpJer (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: EpJer (xh)", function() {
      
		expect(p.parse("EpJer 1:1").osis()).toEqual("EpJer.1.1")
		;
      return true;
    });
  });

  describe("Localized book Rev (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Rev (xh)", function() {
      
		expect(p.parse("KwabaseTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KwabasTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KumaTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YeziTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("AbaTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EkaTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ImiTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IsiTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IziTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KumTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YezTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YooTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("AbTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EkTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IiTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ImTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IsTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IzTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KaTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KuTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OoTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YoTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ITyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KwabaseTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("UTyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KwabasTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Tyhilelo 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KumaTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YeziTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("AbaTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EkaTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ImiTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IsiTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IziTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KumTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YezTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YooTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("AbTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EkTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IiTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ImTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IsTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IzTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KaTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KuTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OoTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YoTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ITy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Rev 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("UTy 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("Ty 1:1").osis()).toEqual("Rev.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KWABASTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUMATYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YEZITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ABATYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EKATYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IMITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ISITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IZITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUMTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YEZTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YOOTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ABTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EKTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IMTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ISTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IZTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KATYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OOTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YOTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ITYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KWABASETY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("UTYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KWABASTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("TYHILELO 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUMATY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YEZITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ABATY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EKATY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IMITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ISITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IZITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUMTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YEZTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YOOTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ABTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("EKTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IMTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ISTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("IZTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KATY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KUTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OOTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("YOTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("ITY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("KTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("OTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("REV 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("UTY 1:1").osis()).toEqual("Rev.1.1")
		expect(p.parse("TY 1:1").osis()).toEqual("Rev.1.1")
		;
      return true;
    });
  });

  describe("Localized book PrMan (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: PrMan (xh)", function() {
      
		expect(p.parse("PrMan 1:1").osis()).toEqual("PrMan.1.1")
		;
      return true;
    });
  });

  describe("Localized book Deut (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Deut (xh)", function() {
      
		expect(p.parse("KwabaseDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KwabasDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KumaDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YeziDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("AbaDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("EkaDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ImiDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IsiDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IziDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KumDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YezDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YooDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("AbDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("EkDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IiDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ImDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IsDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IzDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KaDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KuDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("OoDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YoDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ODuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("UDuteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Duteronomi 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Deut 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("Dut 1:1").osis()).toEqual("Deut.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KWABASDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KUMADUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YEZIDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ABADUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("EKADUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IMIDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ISIDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IZIDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KUMDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YEZDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YOODUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ABDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("EKDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IIDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IMDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ISDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IZDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KADUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KUDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("OODUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("YODUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("IDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("KDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("ODUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("UDUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DUTERONOMI 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DEUT 1:1").osis()).toEqual("Deut.1.1")
		expect(p.parse("DUT 1:1").osis()).toEqual("Deut.1.1")
		;
      return true;
    });
  });

  describe("Localized book Josh (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Josh (xh)", function() {
      
		expect(p.parse("KwabaseYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KwabasYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KumaYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YeziYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("AbaYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("EkaYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ImiYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IsiYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IziYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KumYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YezYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YooYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("AbYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("EkYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IiYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ImYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IsYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IzYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KaYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KuYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("OoYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YoYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("OYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("UYoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Yoshuwa 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Josh 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("Yosh 1:1").osis()).toEqual("Josh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KWABASYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KUMAYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YEZIYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ABAYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("EKAYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IMIYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ISIYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IZIYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KUMYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YEZYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YOOYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ABYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("EKYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IIYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IMYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("ISYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IZYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KAYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KUYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("OOYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YOYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("IYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("KYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("OYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("UYOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YOSHUWA 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("JOSH 1:1").osis()).toEqual("Josh.1.1")
		expect(p.parse("YOSH 1:1").osis()).toEqual("Josh.1.1")
		;
      return true;
    });
  });

  describe("Localized book Judg (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Judg (xh)", function() {
      
		expect(p.parse("KwabaseGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KwabasGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KumaGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YeziGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("AbaGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("EkaGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ImiGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IsiGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IziGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KumGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YezGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YooGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("AbGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("EkGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IiGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ImGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IsGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IzGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KaGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KuGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("OoGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YoGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("OGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("UGwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Abagw 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Gwebi 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("Judg 1:1").osis()).toEqual("Judg.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KWABASGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KUMAGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YEZIGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ABAGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("EKAGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IMIGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ISIGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IZIGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KUMGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YEZGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YOOGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ABGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("EKGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IIGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IMGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ISGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IZGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KAGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KUGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("OOGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("YOGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("IGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("KGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("OGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("UGWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("ABAGW 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("GWEBI 1:1").osis()).toEqual("Judg.1.1")
		expect(p.parse("JUDG 1:1").osis()).toEqual("Judg.1.1")
		;
      return true;
    });
  });

  describe("Localized book Ruth (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Ruth (xh)", function() {
      
		expect(p.parse("KwabaseRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KwabasRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KumaRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YeziRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("AbaRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("EkaRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ImiRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IsiRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IziRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KumRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YezRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YooRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("AbRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("EkRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IiRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ImRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IsRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IzRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KaRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KuRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("OoRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YoRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KRute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ORute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("URute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rute 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Ruth 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("Rut 1:1").osis()).toEqual("Ruth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASERUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KWABASRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KUMARUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YEZIRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ABARUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("EKARUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IMIRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ISIRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IZIRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KUMRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YEZRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YOORUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ABRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("EKRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IIRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IMRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ISRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IZRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KARUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KURUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("OORUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("YORUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("IRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("KRUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("ORUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("URUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUTE 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUTH 1:1").osis()).toEqual("Ruth.1.1")
		expect(p.parse("RUT 1:1").osis()).toEqual("Ruth.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Esd (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Esd (xh)", function() {
      
		expect(p.parse("1Esd 1:1").osis()).toEqual("1Esd.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Esd (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Esd (xh)", function() {
      
		expect(p.parse("2Esd 1:1").osis()).toEqual("2Esd.1.1")
		;
      return true;
    });
  });

  describe("Localized book Isa (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Isa (xh)", function() {
      
		expect(p.parse("KwabaseIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KwabasIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KumaIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YeziIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("AbaIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("EkaIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ImiIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IsiIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IziIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KumIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YezIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YooIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("AbIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("EkIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IiIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ImIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IsIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IzIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KaIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KuIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("OoIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YoIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("OIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("UIsaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Isaya 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("Isa 1:1").osis()).toEqual("Isa.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KWABASISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KUMAISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YEZIISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ABAISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("EKAISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IMIISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISIISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZIISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KUMISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YEZISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YOOISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ABISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("EKISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IIISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IMISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IZISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KAISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KUISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("OOISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("YOISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("IISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("KISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("OISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("UISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISAYA 1:1").osis()).toEqual("Isa.1.1")
		expect(p.parse("ISA 1:1").osis()).toEqual("Isa.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Sam (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Sam (xh)", function() {
      
		expect(p.parse("II. KwabaseSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabaseSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KwabaseSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KwabaseSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KwabasSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabasSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabaseSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabaseSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KwabaseSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KwabasSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KwabasSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabasSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabasSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabaseSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KwabasSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KumaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YeziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumaSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KwabasSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YeziSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KumaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YeziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbaSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkaSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KumaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YeziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. AbaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. EkaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ImiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IsiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KumSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YezSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YooSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImiSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsiSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IziSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumaSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumaSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YezSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YeziSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YeziSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YooSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KumaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YeziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. AbaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. EkaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ImiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IsiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KumSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YezSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YooSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbaSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbaSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkaSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkaSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II AbaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II EkaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ImiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IsiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KumSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YezSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YooSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. AbSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. EkSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ImSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IsSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IzSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KuSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. OoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IiSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImiSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImiSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsiSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsiSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IzSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IziSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IziSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KaSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KuSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumaSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OoSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YezSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YezSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YeziSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YoSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YooSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YooSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 AbaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 EkaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ImiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IsiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IziSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KumSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YezSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YooSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. AbSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. EkSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ImSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IsSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IzSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KuSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. OoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbaSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkaSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II AbSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II EkSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ImSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IsSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IzSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KuSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II OoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ISamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. OSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. USamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IiSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IiSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImiSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsiSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IzSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IzSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IziSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KaSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KaSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KuSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KuSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KumSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OoSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OoSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USamuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YezSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YoSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YoSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YooSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 AbSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 EkSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IiSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ImSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IsSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IzSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KaSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KuSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 OoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YoSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ISamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. OSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. USamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("AbSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EkSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ISamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II OSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II USamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Samuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IiSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ImSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IsSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IzSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KaSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KuSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OoSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Samuweli II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USamuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USamuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YoSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ISamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 OSamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 USamuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Samuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Samuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Samuweli 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Samuweli II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USamuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Samuweli 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("Samuweli 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Samuel 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 Sam 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2Sam 1:1").osis()).toEqual("2Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("II. KWABASESAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASESAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KWABASESAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KWABASESAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KWABASSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASESAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASESAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KWABASESAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KWABASSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KWABASSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASESAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KWABASSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KUMASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YEZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMASAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KWABASSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KUMASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YEZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABASAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKASAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KUMASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YEZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ABASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. EKASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IMISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ISISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KUMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YEZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YOOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMASAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMASAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOOSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KUMASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YEZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ABASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. EKASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IMISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ISISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KUMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YEZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YOOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABASAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABASAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKASAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKASAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ABASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II EKASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IMISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ISISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KUMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YEZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YOOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ABSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. EKSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ISSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. IZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KUSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. OOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. YOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KASAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMASAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OOSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOOSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOOSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ABASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 EKASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IMISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ISISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IZISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KUMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YEZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YOOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ABSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. EKSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ISSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. IZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KUSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. OOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. YOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABASAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKASAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ABSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II EKSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ISSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II IZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KUSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II OOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II YOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. ISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. KSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. OSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. USAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KASAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KASAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUMSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OOSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OOSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YEZSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOOSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ABSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 EKSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IMSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ISSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 IZSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KASAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KUSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 OOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 YOSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. ISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. KSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. OSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. USAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ABSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("EKSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II ISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II KSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II OSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II USAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IMSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("IZSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KASAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KUSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OOSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("SAMUWELI II. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("YOSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 ISAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 KSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 OSAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 USAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("ISAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("KSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("OSAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("SAMUWELI 2. 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("SAMUWELI II 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("USAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAMUWELI 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("SAMUWELI 2 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAMUEL 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II. SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2. SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("II SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2 SAM 1:1").osis()).toEqual("2Sam.1.1")
		expect(p.parse("2SAM 1:1").osis()).toEqual("2Sam.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Sam (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Sam (xh)", function() {
      
		expect(p.parse("1. KwabaseSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KwabaseSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabaseSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabaseSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KwabaseSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KwabasSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KwabaseSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KwabasSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabasSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabasSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabaseSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabaseSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KwabasSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KwabasSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabasSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KwabasSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KumaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YeziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KumaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YeziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumaSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumaSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YeziSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YeziSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KumaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YeziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. AbaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. EkaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ImiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IsiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KumSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YezSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YooSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbaSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbaSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkaSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkaSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KumaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YeziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. AbaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. EkaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ImiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IsiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KumSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YezSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YooSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImiSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImiSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsiSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsiSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IziSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IziSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumaSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumaSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YezSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YezSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YeziSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YeziSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YooSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YooSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 AbaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 EkaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ImiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IsiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KumSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YezSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YooSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. AbSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. EkSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ImSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IsSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IzSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KuSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. OoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbaSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbaSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkaSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkaSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I AbaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I EkaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ImiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IsiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IziSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KumSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YezSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YooSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. AbSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. EkSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ImSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IsSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IzSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KuSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. OoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IiSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IiSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImiSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImiSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsiSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsiSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IzSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IzSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IziSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IziSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KaSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KaSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KuSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KuSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KumSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OoSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OoSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YezSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YezSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YoSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YoSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YooSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YooSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 AbSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 EkSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ImSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IsSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IzSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KuSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 OoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ISamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. OSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. USamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("AbSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EkSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I AbSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I EkSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IiSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ImSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IsSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IzSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KaSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KuSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I OoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YoSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ISamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. OSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. USamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IiSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IiSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ImSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IsSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IzSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IzSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KaSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KaSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KuSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KuSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OoSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OoSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USamuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USamuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YoSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YoSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ISamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 OSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 USamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Samuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ISamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I OSamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I USamuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Samuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Samuweli 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Samuweli I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USamuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USamuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Samuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Samuweli 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Samuweli 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("Samuweli I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Samuel 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I Sam 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1Sam 1:1").osis()).toEqual("1Sam.1.1")
		p.include_apocrypha(false)
		expect(p.parse("1. KWABASESAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KWABASESAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASESAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASESAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KWABASESAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KWABASSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KWABASESAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KWABASSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASESAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASESAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KWABASSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KWABASSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KWABASSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KUMASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YEZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KUMASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YEZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMASAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMASAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KUMASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YEZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ABASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. EKASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IMISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ISISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KUMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YEZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YOOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABASAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABASAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKASAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKASAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KUMASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YEZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ABASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. EKASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IMISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ISISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KUMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YEZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YOOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMASAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMASAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOOSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOOSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ABASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 EKASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IMISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ISISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KUMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YEZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YOOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ABSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. EKSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ISSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. IZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KUSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. OOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. YOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABASAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABASAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKASAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKASAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ABASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I EKASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IMISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ISISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IZISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KUMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YEZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YOOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ABSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. EKSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ISSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. IZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KUSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. OOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. YOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KASAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KASAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUMSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OOSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OOSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YEZSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOOSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOOSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ABSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 EKSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ISSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 IZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KUSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 OOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 YOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. ISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. KSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. OSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. USAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ABSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("EKSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ABSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I EKSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IMSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ISSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I IZSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KASAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KUSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I OOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I YOSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. ISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. KSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. OSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. USAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IMSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("IZSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KASAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KASAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KUSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OOSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OOSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("YOSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 ISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 KSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 OSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 USAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I ISAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I KSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I OSAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I USAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("ISAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("KSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("OSAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("SAMUWELI 1. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("SAMUWELI I. 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("USAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAMUWELI 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("SAMUWELI 1 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("SAMUWELI I 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAMUEL 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1. SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I. SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1 SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("I SAM 1:1").osis()).toEqual("1Sam.1.1")
		expect(p.parse("1SAM 1:1").osis()).toEqual("1Sam.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Kgs (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Kgs (xh)", function() {
      
		expect(p.parse("II. KwabaseKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabaseKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KwabaseKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KwabaseKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KwabasKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabasKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabaseKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabaseKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KwabaseKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KwabasKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KwabasKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabasKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabasKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabaseKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KwabasKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KumaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YeziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumaKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KwabasKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YeziKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KumaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YeziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbaKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkaKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KumaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YeziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. AbaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. EkaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ImiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IsiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KumKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YezKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YooKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImiKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsiKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IziKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumaKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumaKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YezKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YeziKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YeziKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YooKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KumaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YeziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. AbaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. EkaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ImiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IsiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KumKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YezKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YooKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbaKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbaKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkaKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkaKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II AbaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II EkaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ImiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IsiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KumKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YezKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YooKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. AbKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. EkKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ImKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IsKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IzKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KuKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. OoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IiKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImiKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImiKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsiKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsiKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IzKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IziKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IziKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KaKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KuKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumaKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OoKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YezKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YezKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YeziKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YoKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YooKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YooKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 AbaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 EkaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ImiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IsiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IziKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KumKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YezKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YooKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. AbKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. EkKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ImKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IsKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IzKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KuKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. OoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbaKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkaKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II AbKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II EkKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ImKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IsKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IzKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KuKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II OoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. OKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. UKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IiKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IiKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImiKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsiKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IzKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IzKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IziKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KaKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KaKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KuKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KuKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KumKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OoKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OoKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YezKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YoKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YoKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YooKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 AbKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 EkKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IiKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ImKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IsKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IzKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KaKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KuKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 OoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YoKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. OKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. UKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("AbKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EkKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II OKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II UKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. Kumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IiKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ImKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IsKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IzKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KaKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KuKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Kumkani II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OoKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YoKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 OKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 UKumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. Kumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II Kumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Kumkani 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Kumkani II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 Kumkani 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("Kumkani 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2Kgs 1:1").osis()).toEqual("2Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("II. KWABASEKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KWABASEKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KWABASEKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KWABASKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KWABASEKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KWABASKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KWABASKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KWABASKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KUMAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YEZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMAKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KWABASKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZIKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KUMAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YEZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABAKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKAKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KUMAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YEZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ABAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. EKAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IMIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ISIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KUMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YEZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YOOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMIKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISIKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZIKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMAKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMAKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZIKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZIKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOOKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KUMAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YEZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ABAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. EKAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IMIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ISIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KUMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YEZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YOOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABAKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABAKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKAKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKAKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ABAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II EKAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IMIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ISIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KUMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YEZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YOOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ABKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. EKKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. ISKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KUKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. OOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. YOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IIKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMIKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMIKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISIKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISIKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZIKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZIKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KAKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMAKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OOKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZIKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOOKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOOKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ABAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 EKAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IMIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ISIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IZIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KUMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YEZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YOOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ABKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. EKKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. ISKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KUKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. OOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. YOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABAKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKAKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ABKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II EKKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II ISKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KUKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II OOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II YOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. IKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. OKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. UKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IIKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IIKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMIKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISIKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZIKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KAKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KAKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OOKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OOKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YEZKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOOKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ABKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 EKKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IIKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IMKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 ISKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IZKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KAKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KUKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 OOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 YOKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. IKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. OKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. UKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ABKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("EKKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II IKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II OKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II UKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II. KUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IIKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IMKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("ISKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IZKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KAKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKANI II. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OOKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("YOKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 IKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 OKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 UKUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2. KUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("II KUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("IKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKANI 2. 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKANI II 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("OKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("UKUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2 KUMKANI 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("KUMKANI 2 1:1").osis()).toEqual("2Kgs.1.1")
		expect(p.parse("2KGS 1:1").osis()).toEqual("2Kgs.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Kgs (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Kgs (xh)", function() {
      
		expect(p.parse("1. KwabaseKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KwabaseKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabaseKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabaseKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KwabaseKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KwabasKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KwabaseKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KwabasKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabasKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabasKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabaseKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabaseKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KwabasKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KwabasKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabasKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KwabasKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KumaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YeziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KumaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YeziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumaKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumaKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YeziKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YeziKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KumaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YeziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. AbaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. EkaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ImiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IsiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KumKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YezKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YooKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbaKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbaKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkaKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkaKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KumaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YeziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. AbaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. EkaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ImiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IsiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KumKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YezKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YooKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImiKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImiKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsiKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsiKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IziKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IziKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumaKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumaKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YezKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YezKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YeziKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YeziKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YooKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YooKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 AbaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 EkaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ImiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IsiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KumKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YezKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YooKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. AbKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. EkKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ImKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IsKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IzKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KuKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. OoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbaKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbaKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkaKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkaKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I AbaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I EkaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ImiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IsiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IziKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KumKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YezKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YooKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. AbKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. EkKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ImKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IsKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IzKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KuKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. OoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IiKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IiKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImiKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImiKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsiKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsiKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IzKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IzKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IziKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IziKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KaKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KaKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KuKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KuKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KumKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OoKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OoKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YezKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YezKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YoKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YoKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YooKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YooKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 AbKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 EkKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ImKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IsKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IzKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KuKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 OoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. OKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. UKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("AbKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EkKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I AbKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I EkKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IiKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ImKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IsKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IzKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KaKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KuKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I OoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YoKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. OKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. UKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IiKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IiKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ImKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IsKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IzKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IzKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KaKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KaKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KuKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KuKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OoKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OoKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YoKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YoKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 OKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 UKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. Kumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I OKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I UKumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. Kumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Kumkani 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Kumkani I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 Kumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I Kumkani 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Kumkani 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("Kumkani I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1Kgs 1:1").osis()).toEqual("1Kgs.1.1")
		p.include_apocrypha(false)
		expect(p.parse("1. KWABASEKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KWABASEKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KWABASEKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KWABASKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KWABASEKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KWABASKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASEKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KWABASKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KWABASKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KWABASKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KUMAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YEZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KUMAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YEZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMAKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMAKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZIKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZIKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KUMAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YEZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ABAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. EKAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IMIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ISIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KUMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YEZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YOOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABAKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABAKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKAKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKAKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KUMAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YEZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ABAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. EKAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IMIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ISIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KUMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YEZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YOOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMIKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMIKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISIKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISIKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZIKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZIKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMAKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMAKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZIKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZIKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOOKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOOKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ABAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 EKAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IMIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ISIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KUMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YEZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YOOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ABKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. EKKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. ISKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KUKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. OOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. YOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABAKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABAKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKAKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKAKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ABAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I EKAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IMIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ISIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IZIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KUMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YEZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YOOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ABKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. EKKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. ISKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KUKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. OOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. YOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IIKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IIKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMIKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMIKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISIKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISIKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZIKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZIKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KAKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KAKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OOKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OOKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YEZKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOOKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOOKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ABKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 EKKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 ISKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KUKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 OOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 YOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. IKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. OKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. UKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ABKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("EKKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ABKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I EKKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IIKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IMKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I ISKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IZKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KAKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KUKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I OOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I YOKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. IKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. OKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. UKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IIKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IIKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IMKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("ISKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IZKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KAKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KAKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OOKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OOKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("YOKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 IKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 OKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 UKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1. KUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I IKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I OKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I UKUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I. KUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("IKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKANI 1. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKANI I. 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("OKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("UKUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1 KUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("I KUMKANI 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKANI 1 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("KUMKANI I 1:1").osis()).toEqual("1Kgs.1.1")
		expect(p.parse("1KGS 1:1").osis()).toEqual("1Kgs.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Chr (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Chr (xh)", function() {
      
		expect(p.parse("II. KwabaseKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabaseKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KwabaseKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KwabaseKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KwabasKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabasKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabaseKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabaseKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KwabaseKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KwabasKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KwabasKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabasKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabasKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabaseKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KwabasKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KumaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YeziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumaKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KwabasKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YeziKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KumaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YeziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbaKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkaKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KumaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YeziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. AbaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. EkaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ImiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IsiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KumKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YezKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YooKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImiKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsiKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IziKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumaKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumaKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YezKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YeziKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YeziKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YooKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KumaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YeziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. AbaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. EkaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ImiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IsiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KumKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YezKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YooKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbaKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbaKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkaKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkaKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II AbaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II EkaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ImiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IsiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KumKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YezKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YooKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. AbKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. EkKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ImKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IsKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IzKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KuKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. OoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IiKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImiKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImiKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsiKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsiKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IzKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IziKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IziKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KaKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KuKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumaKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OoKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YezKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YezKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YeziKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YoKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YooKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YooKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 AbaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 EkaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ImiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IsiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IziKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KumKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YezKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YooKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. AbKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. EkKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ImKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IsKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IzKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KuKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. OoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbaKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkaKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II AbKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II EkKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ImKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IsKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IzKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KuKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II OoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. OKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. UKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IiKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IiKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImiKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsiKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IzKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IzKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IziKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KaKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KaKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KuKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KuKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KumKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OoKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OoKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YezKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YoKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YoKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YooKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 AbKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 EkKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IiKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ImKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IsKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IzKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KaKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KuKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 OoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YoKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. OKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. UKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("AbKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EkKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II OKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II UKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. Kumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IiKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ImKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IsKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IzKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KaKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Kronike II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KuKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OoKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YoKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 OKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 UKumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. Kumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II Kumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Kronike 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Kronike II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 Kumkani 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("Kronike 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2Chr 1:1").osis()).toEqual("2Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("II. KWABASEKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASEKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KWABASEKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KWABASEKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KWABASKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASEKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASEKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KWABASEKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KWABASKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KWABASKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASEKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KWABASKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KUMAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YEZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMAKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KWABASKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZIKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KUMAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YEZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABAKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKAKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KUMAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YEZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ABAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. EKAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IMIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ISIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KUMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YEZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YOOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMIKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISIKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZIKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMAKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMAKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZIKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZIKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOOKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KUMAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YEZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ABAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. EKAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IMIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ISIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KUMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YEZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YOOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABAKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABAKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKAKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKAKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ABAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II EKAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IMIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ISIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KUMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YEZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YOOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ABKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. EKKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. ISKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KUKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. OOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. YOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IIKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMIKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMIKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISIKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISIKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZIKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZIKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KAKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMAKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OOKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZIKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOOKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOOKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ABAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 EKAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IMIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ISIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IZIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KUMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YEZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YOOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ABKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. EKKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. ISKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KUKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. OOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. YOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABAKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKAKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ABKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II EKKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II ISKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KUKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II OOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II YOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. IKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. OKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. UKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IIKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IIKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMIKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISIKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZIKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KAKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KAKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUMKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OOKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OOKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YEZKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOOKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ABKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 EKKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IIKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IMKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 ISKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IZKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KAKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KUKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 OOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 YOKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. IKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. OKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. UKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ABKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("EKKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II IKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II OKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II UKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II. KUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IIKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IMKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("ISKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IZKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KAKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KRONIKE II. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KUKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OOKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("YOKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 IKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 OKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 UKUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2. KUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("II KUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("IKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KRONIKE 2. 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KRONIKE II 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("OKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("UKRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2 KUMKANI 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("KRONIKE 2 1:1").osis()).toEqual("2Chr.1.1")
		expect(p.parse("2CHR 1:1").osis()).toEqual("2Chr.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Chr (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Chr (xh)", function() {
      
		expect(p.parse("1. KwabaseKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KwabaseKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabaseKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabaseKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KwabaseKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KwabasKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KwabaseKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KwabasKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabasKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabasKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabaseKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabaseKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KwabasKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KwabasKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabasKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KwabasKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KumaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YeziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KumaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YeziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumaKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumaKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YeziKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YeziKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KumaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YeziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. AbaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. EkaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ImiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IsiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KumKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YezKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YooKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbaKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbaKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkaKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkaKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KumaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YeziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. AbaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. EkaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ImiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IsiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KumKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YezKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YooKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImiKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImiKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsiKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsiKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IziKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IziKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumaKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumaKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YezKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YezKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YeziKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YeziKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YooKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YooKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 AbaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 EkaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ImiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IsiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KumKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YezKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YooKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. AbKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. EkKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ImKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IsKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IzKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KuKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. OoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbaKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbaKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkaKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkaKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I AbaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I EkaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ImiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IsiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IziKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KumKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YezKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YooKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. AbKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. EkKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ImKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IsKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IzKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KuKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. OoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IiKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IiKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImiKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImiKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsiKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsiKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IzKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IzKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IziKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IziKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KaKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KaKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KuKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KuKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KumKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OoKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OoKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YezKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YezKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YoKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YoKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YooKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YooKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 AbKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 EkKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ImKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IsKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IzKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KuKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 OoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. OKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. UKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("AbKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EkKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I AbKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I EkKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IiKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ImKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IsKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IzKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KaKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KuKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I OoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YoKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. OKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. UKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IiKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IiKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ImKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IsKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IzKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IzKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KaKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KaKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KuKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KuKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OoKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OoKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YoKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YoKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 OKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 UKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. Kumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I OKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I UKumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. Kumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Kronike 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Kronike I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 Kumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I Kumkani 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Kronike 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("Kronike I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1Chr 1:1").osis()).toEqual("1Chr.1.1")
		p.include_apocrypha(false)
		expect(p.parse("1. KWABASEKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KWABASEKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASEKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASEKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KWABASEKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KWABASKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KWABASEKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KWABASKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASEKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASEKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KWABASKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KWABASKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KWABASKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KUMAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YEZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KUMAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YEZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMAKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMAKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZIKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZIKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KUMAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YEZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ABAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. EKAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IMIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ISIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KUMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YEZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YOOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABAKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABAKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKAKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKAKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KUMAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YEZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ABAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. EKAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IMIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ISIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KUMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YEZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YOOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMIKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMIKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISIKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISIKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZIKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZIKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMAKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMAKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZIKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZIKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOOKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOOKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ABAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 EKAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IMIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ISIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KUMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YEZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YOOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ABKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. EKKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. ISKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KUKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. OOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. YOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABAKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABAKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKAKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKAKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ABAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I EKAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IMIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ISIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IZIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KUMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YEZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YOOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ABKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. EKKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. ISKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KUKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. OOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. YOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IIKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IIKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMIKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMIKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISIKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISIKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZIKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZIKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KAKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KAKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUMKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OOKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OOKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YEZKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOOKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOOKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ABKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 EKKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 ISKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KUKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 OOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 YOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. IKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. OKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. UKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ABKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("EKKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ABKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I EKKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IIKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IMKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I ISKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IZKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KAKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KUKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I OOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I YOKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. IKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. OKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. UKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IIKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IIKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IMKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("ISKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IZKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KAKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KAKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KUKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OOKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OOKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("YOKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 IKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 OKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 UKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1. KUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I IKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I OKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I UKUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I. KUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("IKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KRONIKE 1. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KRONIKE I. 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("OKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("UKRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1 KUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("I KUMKANI 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KRONIKE 1 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("KRONIKE I 1:1").osis()).toEqual("1Chr.1.1")
		expect(p.parse("1CHR 1:1").osis()).toEqual("1Chr.1.1")
		;
      return true;
    });
  });

  describe("Localized book Ezra (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Ezra (xh)", function() {
      
		expect(p.parse("KwabaseEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KwabasEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KumaEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YeziEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("AbaEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EkaEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ImiEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IsiEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IziEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KumEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YezEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YooEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("AbEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EkEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IiEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ImEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IsEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IzEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KaEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KuEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("OoEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YoEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("OEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("UEzra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezra 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ezr 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("Ez 1:1").osis()).toEqual("Ezra.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KWABASEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KUMAEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YEZIEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ABAEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EKAEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IMIEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ISIEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IZIEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KUMEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YEZEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YOOEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ABEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EKEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IIEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IMEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("ISEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IZEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KAEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KUEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("OOEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("YOEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("IEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("KEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("OEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("UEZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZRA 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZR 1:1").osis()).toEqual("Ezra.1.1")
		expect(p.parse("EZ 1:1").osis()).toEqual("Ezra.1.1")
		;
      return true;
    });
  });

  describe("Localized book Neh (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Neh (xh)", function() {
      
		expect(p.parse("KwabaseNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KwabasNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KumaNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YeziNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("AbaNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("EkaNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ImiNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IsiNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IziNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KumNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YezNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YooNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("AbNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("EkNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IiNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ImNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IsNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IzNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KaNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KuNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("OoNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YoNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("INehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ONehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("UNehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Nehemiya 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("Neh 1:1").osis()).toEqual("Neh.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASENEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KWABASNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KUMANEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YEZINEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ABANEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("EKANEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IMINEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ISINEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IZINEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KUMNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YEZNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YOONEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ABNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("EKNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IINEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IMNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ISNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("IZNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KANEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KUNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("OONEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("YONEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("INEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("KNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("ONEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("UNEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEHEMIYA 1:1").osis()).toEqual("Neh.1.1")
		expect(p.parse("NEH 1:1").osis()).toEqual("Neh.1.1")
		;
      return true;
    });
  });

  describe("Localized book GkEsth (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: GkEsth (xh)", function() {
      
		expect(p.parse("GkEsth 1:1").osis()).toEqual("GkEsth.1.1")
		;
      return true;
    });
  });

  describe("Localized book Esth (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Esth (xh)", function() {
      
		expect(p.parse("KwabaseEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KwabasEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KumaEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YeziEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("AbaEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EkaEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ImiEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IsiEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IziEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KumEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YezEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YooEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("AbEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EkEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IiEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ImEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IsEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IzEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KaEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KuEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("OoEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YoEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("OEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("UEstere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Estere 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Esth 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Est 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("Es 1:1").osis()).toEqual("Esth.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KWABASESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KUMAESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YEZIESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ABAESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EKAESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IMIESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ISIESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IZIESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KUMESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YEZESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YOOESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ABESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EKESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IIESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IMESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ISESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IZESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KAESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KUESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("OOESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("YOESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("IESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("KESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("OESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("UESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ESTERE 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ESTH 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("EST 1:1").osis()).toEqual("Esth.1.1")
		expect(p.parse("ES 1:1").osis()).toEqual("Esth.1.1")
		;
      return true;
    });
  });

  describe("Localized book Job (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Job (xh)", function() {
      
		expect(p.parse("KwabaseYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KwabasYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KumaYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YeziYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("AbaYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("EkaYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ImiYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IsiYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IziYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KumYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YezYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YooYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("AbYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("EkYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IiYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ImYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IsYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IzYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KaYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KuYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("OoYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YoYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("OYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("UYobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Yobhi 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Job 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("Yob 1:1").osis()).toEqual("Job.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KWABASYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KUMAYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YEZIYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ABAYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("EKAYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IMIYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ISIYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IZIYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KUMYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YEZYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YOOYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ABYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("EKYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IIYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IMYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("ISYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IZYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KAYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KUYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("OOYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YOYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("IYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("KYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("OYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("UYOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YOBHI 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("JOB 1:1").osis()).toEqual("Job.1.1")
		expect(p.parse("YOB 1:1").osis()).toEqual("Job.1.1")
		;
      return true;
    });
  });

  describe("Localized book Ps (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Ps (xh)", function() {
      
		expect(p.parse("KwabaseNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KwabasNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KumaNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YeziNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("AbaNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EkaNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ImiNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IsiNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IziNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KumNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YezNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YooNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("AbNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EkNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IiNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ImNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IsNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IzNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KaNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KuNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KwabaseNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("OoNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YoNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("INdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Indumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KwabasNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ONdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("UNdumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ndumiso 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KumaNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YeziNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("AbaNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EkaNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ImiNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IsiNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IziNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KumNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YezNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YooNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("AbNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EkNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IiNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ImNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IsNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IzNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KaNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KuNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("OoNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YoNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("INd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ONd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("UNd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Nd 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("Ps 1:1").osis()).toEqual("Ps.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASENDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KWABASNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUMANDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YEZINDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ABANDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EKANDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IMINDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ISINDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IZINDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUMNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YEZNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YOONDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ABNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EKNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IINDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IMNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ISNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IZNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KANDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KWABASEND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("OONDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YONDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("INDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("INDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KWABASND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ONDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("UNDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("NDUMISO 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUMAND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YEZIND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ABAND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EKAND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IMIND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ISIND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IZIND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUMND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YEZND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YOOND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ABND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("EKND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IIND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IMND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ISND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IZND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KAND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KUND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("OOND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("YOND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("IND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("KND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("OND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("UND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("ND 1:1").osis()).toEqual("Ps.1.1")
		expect(p.parse("PS 1:1").osis()).toEqual("Ps.1.1")
		;
      return true;
    });
  });

  describe("Localized book PrAzar (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: PrAzar (xh)", function() {
      
		expect(p.parse("PrAzar 1:1").osis()).toEqual("PrAzar.1.1")
		;
      return true;
    });
  });

  describe("Localized book Prov (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Prov (xh)", function() {
      
		expect(p.parse("KwabaseZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KwabasZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KumaZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YeziZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("AbaZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("EkaZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ImiZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IsiZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IziZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KumZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YezZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YooZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("AbZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("EkZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IiZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ImZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IsZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IzZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KaZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KuZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("OoZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YoZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("OZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("UZekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Zekeliso 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IMiz 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("Prov 1:1").osis()).toEqual("Prov.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KWABASZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KUMAZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YEZIZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ABAZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("EKAZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IMIZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ISIZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IZIZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KUMZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YEZZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YOOZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ABZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("EKZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IIZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IMZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ISZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IZZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KAZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KUZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("OOZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("YOZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("KZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("OZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("UZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("ZEKELISO 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("IMIZ 1:1").osis()).toEqual("Prov.1.1")
		expect(p.parse("PROV 1:1").osis()).toEqual("Prov.1.1")
		;
      return true;
    });
  });

  describe("Localized book Eccl (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Eccl (xh)", function() {
      
		expect(p.parse("KwabaseNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KwabasNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KumaNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YeziNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("AbaNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("EkaNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ImiNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IsiNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IziNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KumNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YezNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YooNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("AbNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("EkNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IiNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ImNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IsNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IzNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KaNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KuNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("OoNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YoNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("INtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ONtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("UNtshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Ntshumayeli 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Intsh 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("Eccl 1:1").osis()).toEqual("Eccl.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASENTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KWABASNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KUMANTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YEZINTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ABANTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("EKANTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IMINTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ISINTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IZINTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KUMNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YEZNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YOONTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ABNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("EKNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IINTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IMNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ISNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("IZNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KANTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KUNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("OONTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("YONTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("INTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("KNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ONTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("UNTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("NTSHUMAYELI 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("INTSH 1:1").osis()).toEqual("Eccl.1.1")
		expect(p.parse("ECCL 1:1").osis()).toEqual("Eccl.1.1")
		;
      return true;
    });
  });

  describe("Localized book SgThree (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: SgThree (xh)", function() {
      
		expect(p.parse("SgThree 1:1").osis()).toEqual("SgThree.1.1")
		;
      return true;
    });
  });

  describe("Localized book Song (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Song (xh)", function() {
      
		expect(p.parse("KwabaseNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KwabasNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KumaNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YeziNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("AbaNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("EkaNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ImiNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IsiNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IziNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KumNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YezNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YooNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("AbNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("EkNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IiNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ImNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IsNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IzNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KaNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KuNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("OoNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YoNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("INgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ONgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("UNgoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Ngoma Yazo Iingoma 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("Song 1:1").osis()).toEqual("Song.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASENGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KWABASNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KUMANGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YEZINGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ABANGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("EKANGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IMINGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ISINGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IZINGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KUMNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YEZNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YOONGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ABNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("EKNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IINGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IMNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ISNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("IZNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KANGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KUNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("OONGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("YONGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("INGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("KNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("ONGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("UNGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("NGOMA YAZO IINGOMA 1:1").osis()).toEqual("Song.1.1")
		expect(p.parse("SONG 1:1").osis()).toEqual("Song.1.1")
		;
      return true;
    });
  });

  describe("Localized book Jer (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Jer (xh)", function() {
      
		expect(p.parse("KwabaseYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KwabasYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KumaYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YeziYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("AbaYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("EkaYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ImiYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IsiYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IziYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KumYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YezYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YooYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("AbYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("EkYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IiYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ImYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IsYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IzYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KaYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KuYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("OoYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YoYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("OYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("UYeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Yeremiya 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("Jer 1:1").osis()).toEqual("Jer.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KWABASYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KUMAYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YEZIYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ABAYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("EKAYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IMIYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ISIYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IZIYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KUMYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YEZYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YOOYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ABYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("EKYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IIYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IMYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("ISYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IZYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KAYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KUYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("OOYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YOYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("IYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("KYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("OYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("UYEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("YEREMIYA 1:1").osis()).toEqual("Jer.1.1")
		expect(p.parse("JER 1:1").osis()).toEqual("Jer.1.1")
		;
      return true;
    });
  });

  describe("Localized book Ezek (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Ezek (xh)", function() {
      
		expect(p.parse("KwabaseHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KwabasHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KumaHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YeziHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("AbaHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EkaHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ImiHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IsiHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IziHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KumHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YezHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YooHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("AbHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EkHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IiHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ImHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IsHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IzHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KaHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KuHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("OoHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YoHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("OHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("UHezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Hezekile 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Ezek 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("Hez 1:1").osis()).toEqual("Ezek.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KWABASHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KUMAHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YEZIHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ABAHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EKAHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IMIHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ISIHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IZIHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KUMHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YEZHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YOOHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ABHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EKHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IIHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IMHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("ISHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IZHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KAHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KUHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("OOHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("YOHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("IHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("KHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("OHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("UHEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("HEZEKILE 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("EZEK 1:1").osis()).toEqual("Ezek.1.1")
		expect(p.parse("HEZ 1:1").osis()).toEqual("Ezek.1.1")
		;
      return true;
    });
  });

  describe("Localized book Dan (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Dan (xh)", function() {
      
		expect(p.parse("KwabaseDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KwabasDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KumaDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YeziDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("AbaDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("EkaDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ImiDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IsiDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IziDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KumDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YezDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YooDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("AbDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("EkDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IiDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ImDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IsDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IzDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KaDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KuDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("OoDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YoDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ODaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("UDaniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Daniyeli 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("Dan 1:1").osis()).toEqual("Dan.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KWABASDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KUMADANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YEZIDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ABADANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("EKADANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IMIDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ISIDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IZIDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KUMDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YEZDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YOODANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ABDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("EKDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IIDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IMDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ISDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IZDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KADANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KUDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("OODANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("YODANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("IDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("KDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("ODANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("UDANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DANIYELI 1:1").osis()).toEqual("Dan.1.1")
		expect(p.parse("DAN 1:1").osis()).toEqual("Dan.1.1")
		;
      return true;
    });
  });

  describe("Localized book Hos (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Hos (xh)", function() {
      
		expect(p.parse("KwabaseHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KwabasHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KumaHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YeziHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("AbaHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("EkaHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ImiHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IsiHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IziHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KumHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YezHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YooHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("AbHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("EkHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IiHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ImHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IsHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IzHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KaHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KuHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OoHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YoHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("UHoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Hoseya 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("Hos 1:1").osis()).toEqual("Hos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KWABASHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KUMAHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YEZIHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ABAHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("EKAHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IMIHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ISIHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IZIHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KUMHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YEZHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YOOHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ABHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("EKHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IIHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IMHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("ISHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IZHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KAHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KUHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OOHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("YOHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("IHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("KHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("OHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("UHOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("HOSEYA 1:1").osis()).toEqual("Hos.1.1")
		expect(p.parse("HOS 1:1").osis()).toEqual("Hos.1.1")
		;
      return true;
    });
  });

  describe("Localized book Joel (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Joel (xh)", function() {
      
		expect(p.parse("KwabaseYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KwabasYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KumaYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YeziYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("AbaYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("EkaYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ImiYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IsiYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IziYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KumYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YezYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YooYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("AbYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("EkYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IiYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ImYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IsYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IzYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KaYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KuYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("OoYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YoYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("OYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("UYoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Yoweli 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("Joel 1:1").osis()).toEqual("Joel.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KWABASYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KUMAYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YEZIYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ABAYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("EKAYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IMIYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ISIYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IZIYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KUMYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YEZYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YOOYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ABYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("EKYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IIYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IMYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("ISYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IZYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KAYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KUYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("OOYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YOYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("IYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("KYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("OYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("UYOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("YOWELI 1:1").osis()).toEqual("Joel.1.1")
		expect(p.parse("JOEL 1:1").osis()).toEqual("Joel.1.1")
		;
      return true;
    });
  });

  describe("Localized book Amos (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Amos (xh)", function() {
      
		expect(p.parse("KwabaseAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KwabasAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KumaAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YeziAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AbaAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("EkaAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ImiAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IsiAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IziAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KumAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YezAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YooAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AbAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("EkAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IiAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ImAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IsAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IzAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KaAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KuAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("OoAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YoAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("OAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("UAmosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Amosi 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("Amos 1:1").osis()).toEqual("Amos.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KWABASAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KUMAAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YEZIAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ABAAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("EKAAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IMIAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ISIAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IZIAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KUMAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YEZAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YOOAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ABAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("EKAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IIAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IMAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("ISAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IZAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KAAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KUAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("OOAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("YOAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("IAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("KAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("OAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("UAMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AMOSI 1:1").osis()).toEqual("Amos.1.1")
		expect(p.parse("AMOS 1:1").osis()).toEqual("Amos.1.1")
		;
      return true;
    });
  });

  describe("Localized book Obad (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Obad (xh)", function() {
      
		expect(p.parse("KwabaseObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KwabasObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KumaObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YeziObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("AbaObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("EkaObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ImiObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IsiObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IziObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KumObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YezObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YooObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("AbObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("EkObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IiObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ImObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IsObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IzObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KaObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KuObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OoObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YoObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("UObhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obhadiya 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("Obad 1:1").osis()).toEqual("Obad.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KWABASOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KUMAOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YEZIOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABAOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("EKAOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IMIOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ISIOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IZIOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KUMOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YEZOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YOOOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ABOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("EKOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IIOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IMOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("ISOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IZOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KAOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KUOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OOOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("YOOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("IOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("KOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("UOBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBHADIYA 1:1").osis()).toEqual("Obad.1.1")
		expect(p.parse("OBAD 1:1").osis()).toEqual("Obad.1.1")
		;
      return true;
    });
  });

  describe("Localized book Jonah (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Jonah (xh)", function() {
      
		expect(p.parse("KwabaseYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KwabasYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KumaYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YeziYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("AbaYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("EkaYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ImiYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IsiYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IziYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KumYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YezYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YooYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("AbYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("EkYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IiYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ImYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IsYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IzYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KaYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KuYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("OoYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YoYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Jonah 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("OYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("UYona 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("Yona 1:1").osis()).toEqual("Jonah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KWABASYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KUMAYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YEZIYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ABAYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("EKAYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IMIYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ISIYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IZIYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KUMYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YEZYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YOOYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ABYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("EKYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IIYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IMYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("ISYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IZYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KAYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KUYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("OOYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YOYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("IYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("JONAH 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("KYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("OYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("UYONA 1:1").osis()).toEqual("Jonah.1.1")
		expect(p.parse("YONA 1:1").osis()).toEqual("Jonah.1.1")
		;
      return true;
    });
  });

  describe("Localized book Mic (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Mic (xh)", function() {
      
		expect(p.parse("KwabaseMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KwabasMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KumaMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YeziMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("AbaMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("EkaMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ImiMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IsiMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IziMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KumMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YezMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YooMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("AbMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("EkMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IiMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ImMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IsMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IzMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KaMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KuMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("OoMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YoMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("OMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("UMika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mika 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("Mic 1:1").osis()).toEqual("Mic.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KWABASMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KUMAMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YEZIMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ABAMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("EKAMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IMIMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ISIMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IZIMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KUMMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YEZMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YOOMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ABMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("EKMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IIMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IMMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("ISMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IZMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KAMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KUMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("OOMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("YOMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("IMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("KMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("OMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("UMIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MIKA 1:1").osis()).toEqual("Mic.1.1")
		expect(p.parse("MIC 1:1").osis()).toEqual("Mic.1.1")
		;
      return true;
    });
  });

  describe("Localized book Nah (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Nah (xh)", function() {
      
		expect(p.parse("KwabaseUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KwabasUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KumaUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YeziUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("AbaUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("EkaUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ImiUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IsiUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IziUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KumUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YezUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YooUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("AbUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("EkUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IiUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ImUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IsUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IzUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KaUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KuUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("OoUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YoUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("OUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("UUNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("UNahum 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("Nah 1:1").osis()).toEqual("Nah.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KWABASUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KUMAUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YEZIUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ABAUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("EKAUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IMIUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ISIUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IZIUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KUMUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YEZUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YOOUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ABUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("EKUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IIUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IMUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("ISUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IZUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KAUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KUUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("OOUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("YOUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("IUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("KUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("OUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("UUNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("UNAHUM 1:1").osis()).toEqual("Nah.1.1")
		expect(p.parse("NAH 1:1").osis()).toEqual("Nah.1.1")
		;
      return true;
    });
  });

  describe("Localized book Hab (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Hab (xh)", function() {
      
		expect(p.parse("KwabaseHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KwabasHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KumaHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YeziHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("AbaHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("EkaHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ImiHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IsiHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IziHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KumHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YezHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YooHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("AbHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("EkHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IiHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ImHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IsHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IzHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KaHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KuHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("OoHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YoHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("OHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("UHabhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Habhakuki 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("Hab 1:1").osis()).toEqual("Hab.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KWABASHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KUMAHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YEZIHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ABAHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("EKAHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IMIHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ISIHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IZIHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KUMHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YEZHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YOOHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ABHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("EKHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IIHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IMHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("ISHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IZHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KAHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KUHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("OOHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("YOHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("IHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("KHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("OHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("UHABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HABHAKUKI 1:1").osis()).toEqual("Hab.1.1")
		expect(p.parse("HAB 1:1").osis()).toEqual("Hab.1.1")
		;
      return true;
    });
  });

  describe("Localized book Zeph (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Zeph (xh)", function() {
      
		expect(p.parse("KwabaseZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KwabasZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KumaZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YeziZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("AbaZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("EkaZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ImiZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IsiZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IziZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KumZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YezZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YooZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("AbZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("EkZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IiZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ImZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IsZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IzZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KaZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KuZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("OoZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YoZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("OZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("UZefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Zefaniya 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("Zeph 1:1").osis()).toEqual("Zeph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KWABASZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KUMAZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YEZIZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ABAZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("EKAZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IMIZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ISIZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IZIZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KUMZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YEZZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YOOZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ABZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("EKZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IIZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IMZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ISZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IZZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KAZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KUZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("OOZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("YOZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("IZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("KZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("OZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("UZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ZEFANIYA 1:1").osis()).toEqual("Zeph.1.1")
		expect(p.parse("ZEPH 1:1").osis()).toEqual("Zeph.1.1")
		;
      return true;
    });
  });

  describe("Localized book Hag (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Hag (xh)", function() {
      
		expect(p.parse("KwabaseHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KwabasHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KumaHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YeziHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AbaHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("EkaHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ImiHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IsiHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IziHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KumHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YezHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YooHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("AbHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("EkHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IiHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ImHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IsHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IzHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KaHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KuHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("OoHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YoHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("OHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("UHagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Hagayi 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("Hag 1:1").osis()).toEqual("Hag.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KWABASHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KUMAHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YEZIHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ABAHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("EKAHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IMIHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ISIHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IZIHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KUMHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YEZHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YOOHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ABHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("EKHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IIHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IMHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("ISHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IZHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KAHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KUHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("OOHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("YOHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("IHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("KHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("OHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("UHAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("HAGAYI 1:1").osis()).toEqual("Hag.1.1")
		expect(p.parse("HAG 1:1").osis()).toEqual("Hag.1.1")
		;
      return true;
    });
  });

  describe("Localized book Zech (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Zech (xh)", function() {
      
		expect(p.parse("KwabaseZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KwabasZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KumaZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YeziZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("AbaZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("EkaZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ImiZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IsiZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IziZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KumZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YezZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YooZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("AbZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("EkZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IiZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ImZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IsZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IzZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KaZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KuZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("OoZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YoZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("OZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("UZekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zekariya 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("Zech 1:1").osis()).toEqual("Zech.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KWABASZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KUMAZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YEZIZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ABAZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("EKAZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IMIZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ISIZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IZIZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KUMZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YEZZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YOOZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ABZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("EKZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IIZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IMZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ISZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IZZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KAZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KUZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("OOZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("YOZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("IZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("KZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("OZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("UZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZEKARIYA 1:1").osis()).toEqual("Zech.1.1")
		expect(p.parse("ZECH 1:1").osis()).toEqual("Zech.1.1")
		;
      return true;
    });
  });

  describe("Localized book Mal (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Mal (xh)", function() {
      
		expect(p.parse("KwabaseMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KwabasMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KumaMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YeziMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("AbaMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("EkaMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ImiMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IsiMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IziMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KumMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YezMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YooMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("AbMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("EkMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IiMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ImMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IsMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IzMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KaMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KuMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("OoMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YoMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("OMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("UMalaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Malaki 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("Mal 1:1").osis()).toEqual("Mal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KWABASMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KUMAMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YEZIMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ABAMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("EKAMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IMIMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ISIMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IZIMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KUMMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YEZMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YOOMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ABMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("EKMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IIMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IMMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("ISMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IZMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KAMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KUMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("OOMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("YOMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("IMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("KMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("OMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("UMALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MALAKI 1:1").osis()).toEqual("Mal.1.1")
		expect(p.parse("MAL 1:1").osis()).toEqual("Mal.1.1")
		;
      return true;
    });
  });

  describe("Localized book Matt (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Matt (xh)", function() {
      
		expect(p.parse("KwabaseMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KwabasMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KumaMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YeziMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("AbaMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EkaMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ImiMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IsiMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IziMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KumMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YezMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YooMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("AbMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EkMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IiMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ImMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IsMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IzMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KaMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KuMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("OoMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YoMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("OMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("UMateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mateyu 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Matt 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("Mat 1:1").osis()).toEqual("Matt.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KWABASMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KUMAMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YEZIMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ABAMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EKAMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IMIMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ISIMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IZIMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KUMMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YEZMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YOOMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ABMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("EKMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IIMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IMMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("ISMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IZMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KAMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KUMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("OOMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("YOMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("IMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("KMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("OMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("UMATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATEYU 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MATT 1:1").osis()).toEqual("Matt.1.1")
		expect(p.parse("MAT 1:1").osis()).toEqual("Matt.1.1")
		;
      return true;
    });
  });

  describe("Localized book Mark (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Mark (xh)", function() {
      
		expect(p.parse("KwabaseMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KwabasMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KumaMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YeziMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("AbaMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EkaMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ImiMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IsiMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IziMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KumMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YezMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YooMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("AbMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EkMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IiMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ImMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IsMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IzMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KaMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KuMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("OoMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YoMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("OMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("UMarko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Marko 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("Mark 1:1").osis()).toEqual("Mark.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KWABASMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KUMAMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YEZIMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ABAMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EKAMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IMIMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ISIMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IZIMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KUMMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YEZMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YOOMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ABMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("EKMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IIMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IMMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("ISMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IZMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KAMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KUMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("OOMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("YOMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("IMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("KMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("OMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("UMARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARKO 1:1").osis()).toEqual("Mark.1.1")
		expect(p.parse("MARK 1:1").osis()).toEqual("Mark.1.1")
		;
      return true;
    });
  });

  describe("Localized book Luke (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Luke (xh)", function() {
      
		expect(p.parse("KwabaseLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KwabasLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KumaLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YeziLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("AbaLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EkaLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ImiLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IsiLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IziLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KumLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YezLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YooLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("AbLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EkLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IiLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ImLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IsLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IzLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KaLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KuLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("OoLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YoLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ILuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("OLuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ULuka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Luka 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("Luke 1:1").osis()).toEqual("Luke.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASELUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KWABASLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KUMALUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YEZILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ABALUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EKALUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IMILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ISILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IZILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KUMLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YEZLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YOOLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ABLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("EKLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IMLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ISLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("IZLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KALUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KULUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("OOLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("YOLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ILUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("KLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("OLUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("ULUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKA 1:1").osis()).toEqual("Luke.1.1")
		expect(p.parse("LUKE 1:1").osis()).toEqual("Luke.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1John (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1John (xh)", function() {
      
		expect(p.parse("KwabaseYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabaseYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabasYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabasYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabaseYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabaseYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabasYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KwabasYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumaYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumaYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YeziYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YeziYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbaYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbaYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkaYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkaYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImiYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImiYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsiYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsiYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IziYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IziYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumaYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumaYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YezYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YezYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YeziYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YeziYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YooYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YooYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbaYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbaYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkaYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkaYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IiYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IiYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImiYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImiYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsiYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsiYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IzYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IzYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IziYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IziYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KaYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KaYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KuYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KuYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KumYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OoYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OoYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YezYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YezYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YoYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YoYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YooYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YooYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("AbYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EkYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IiYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IiYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ImYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IsYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IzYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IzYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KaYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KaYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KuYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KuYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OoYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OoYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YoYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YoYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Yohane 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Yohane 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Yohane 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Yohane I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Yohane 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Yohane 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Yohane 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("Yohane I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Yoh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Yoh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Yoh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. Yh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1John 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Yoh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. Yh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 Yh 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I Yh 1:1").osis()).toEqual("1John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASEYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASEYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASEYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KWABASYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMAYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMAYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZIYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZIYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABAYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABAYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKAYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKAYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMIYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMIYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISIYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISIYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZIYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZIYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMAYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMAYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZIYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZIYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOOYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOOYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABAYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABAYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKAYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKAYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IIYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IIYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMIYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMIYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISIYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISIYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZIYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZIYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KAYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KAYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUMYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OOYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OOYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YEZYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOOYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOOYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ABYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("EKYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IIYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IIYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IMYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("ISYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IZYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KAYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KAYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KUYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OOYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OOYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. YOHANE 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. YOHANE 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("IYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("KYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("OYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("UYOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOHANE 1. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOHANE I. 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 YOHANE 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I YOHANE 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOHANE 1 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("YOHANE I 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. YOH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. YOH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 YOH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1. YH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1JOHN 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I YOH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I. YH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("1 YH 1:1").osis()).toEqual("1John.1.1")
		expect(p.parse("I YH 1:1").osis()).toEqual("1John.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2John (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2John (xh)", function() {
      
		expect(p.parse("KwabaseYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabasYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabaseYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabaseYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabasYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabasYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabaseYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumaYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KwabasYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YeziYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbaYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkaYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImiYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsiYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IziYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumaYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumaYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YezYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YeziYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YeziYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YooYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbaYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbaYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkaYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkaYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IiYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImiYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImiYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsiYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsiYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IzYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IziYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IziYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KaYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KuYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumaYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OoYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YezYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YezYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YeziYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YoYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YooYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YooYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbaYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkaYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IiYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IiYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImiYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsiYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IzYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IzYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IziYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KaYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KaYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KuYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KuYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KumYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OoYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OoYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YezYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YoYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YoYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YooYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("AbYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EkYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Yohane 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IiYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ImYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IsYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IzYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KaYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KuYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OoYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YoYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Yohane II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Yohane 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Yohane 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Yohane 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Yohane II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Yohane 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("Yohane 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Yoh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Yoh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Yoh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. Yh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Yoh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. Yh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2John 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II Yh 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 Yh 1:1").osis()).toEqual("2John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASEYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASEYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASEYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMAYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KWABASYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZIYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABAYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKAYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMIYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISIYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZIYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMAYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMAYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZIYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZIYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOOYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABAYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABAYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKAYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKAYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IIYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMIYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMIYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISIYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISIYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZIYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZIYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KAYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMAYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OOYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZIYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOOYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOOYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABAYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKAYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IIYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IIYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMIYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISIYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZIYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KAYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KAYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUMYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OOYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OOYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YEZYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOOYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ABYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("EKYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. YOHANE 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IIYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IMYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("ISYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IZYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KAYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KUYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OOYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOHANE II. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. YOHANE 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II YOHANE 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("IYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("KYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("OYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("UYOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOHANE 2. 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOHANE II 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 YOHANE 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("YOHANE 2 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. YOH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. YOH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II YOH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II. YH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 YOH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2. YH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2JOHN 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("II YH 1:1").osis()).toEqual("2John.1.1")
		expect(p.parse("2 YH 1:1").osis()).toEqual("2John.1.1")
		;
      return true;
    });
  });

  describe("Localized book 3John (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 3John (xh)", function() {
      
		expect(p.parse("KwabaseYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabasYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabaseYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabasYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabaseYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumaYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabasYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabaseYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YeziYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbaYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkaYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImiYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsiYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IziYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumaYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KwabasYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YezYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YeziYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YooYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbaYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkaYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IiYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImiYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsiYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IzYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IziYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KaYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KuYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumaYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OoYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YezYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YeziYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YoYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YooYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbaYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkaYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IiYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImiYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsiYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IzYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IziYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KaYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KuYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumaYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OoYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YezYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YeziYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YoYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YooYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbaYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkaYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Yohane 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IiYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImiYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsiYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IzYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IziYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KaYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KuYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KumYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OoYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YezYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YoYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Yohane III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YooYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("AbYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EkYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Yohane 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IiYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ImYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IsYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IzYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KaYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KuYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OoYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YoYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Yohane III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Yohane 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Yohane 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Yohane 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Yoh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("Yohane 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Yoh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. Yh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Yoh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III Yh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Yoh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. Yh 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3John 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 Yh 1:1").osis()).toEqual("3John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASEYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASEYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMAYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASEYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZIYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABAYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKAYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMIYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISIYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZIYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMAYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KWABASYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZIYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOOYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABAYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKAYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IIYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMIYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISIYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZIYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KAYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMAYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OOYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZIYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOOYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABAYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKAYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IIYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMIYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISIYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZIYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KAYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMAYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OOYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZIYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOOYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABAYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKAYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. YOHANE 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IIYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMIYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISIYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZIYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KAYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUMYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OOYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YEZYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOHANE III. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOOYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ABYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("EKYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III YOHANE 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IIYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IMYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("ISYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IZYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KAYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KUYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OOYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOHANE III 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. YOHANE 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("IYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("KYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("OYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("UYOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOHANE 3. 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 YOHANE 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. YOH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("YOHANE 3 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III YOH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III. YH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. YOH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("III YH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 YOH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3. YH 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3JOHN 1:1").osis()).toEqual("3John.1.1")
		expect(p.parse("3 YH 1:1").osis()).toEqual("3John.1.1")
		;
      return true;
    });
  });

  describe("Localized book John (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: John (xh)", function() {
      
		expect(p.parse("KwabaseYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KwabasYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KumaYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YeziYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("AbaYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EkaYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ImiYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IsiYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IziYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KumYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YezYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YooYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("AbYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EkYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IiYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ImYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IsYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IzYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KaYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KuYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("OoYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YoYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("OYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("UYohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Yohane 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("John 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("Yoh 1:1").osis()).toEqual("John.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KWABASYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KUMAYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YEZIYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ABAYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EKAYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IMIYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ISIYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IZIYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KUMYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YEZYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YOOYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ABYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("EKYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IIYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IMYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("ISYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IZYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KAYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KUYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("OOYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YOYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("IYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("KYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("OYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("UYOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YOHANE 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("JOHN 1:1").osis()).toEqual("John.1.1")
		expect(p.parse("YOH 1:1").osis()).toEqual("John.1.1")
		;
      return true;
    });
  });

  describe("Localized book Acts (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Acts (xh)", function() {
      
		expect(p.parse("KwabaseZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KwabasZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KumaZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YeziZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("AbaZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("EkaZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ImiZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IsiZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IziZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KumZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YezZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YooZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("AbZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("EkZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IiZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ImZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IsZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IzZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KaZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KuZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("OoZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YoZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("OZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("UZenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Zenzo 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("Acts 1:1").osis()).toEqual("Acts.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KWABASZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KUMAZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YEZIZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ABAZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("EKAZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IMIZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ISIZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IZIZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KUMZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YEZZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YOOZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ABZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("EKZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IIZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IMZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ISZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IZZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KAZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KUZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("OOZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("YOZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("IZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("KZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("OZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("UZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ZENZO 1:1").osis()).toEqual("Acts.1.1")
		expect(p.parse("ACTS 1:1").osis()).toEqual("Acts.1.1")
		;
      return true;
    });
  });

  describe("Localized book Rom (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Rom (xh)", function() {
      
		expect(p.parse("KwabaseRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KwabasRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KumaRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YeziRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("AbaRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("EkaRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ImiRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IsiRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IziRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KumRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YezRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YooRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("AbRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("EkRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IiRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ImRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IsRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IzRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KaRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KuRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("OoRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YoRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KRoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ORoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("URoma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Roma 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("Rom 1:1").osis()).toEqual("Rom.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KWABASROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KUMAROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YEZIROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ABAROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("EKAROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IMIROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ISIROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IZIROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KUMROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YEZROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YOOROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ABROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("EKROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IIROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IMROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ISROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IZROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KAROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KUROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("OOROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("YOROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("IROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("KROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("OROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("UROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ROMA 1:1").osis()).toEqual("Rom.1.1")
		expect(p.parse("ROM 1:1").osis()).toEqual("Rom.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Cor (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Cor (xh)", function() {
      
		expect(p.parse("KwabaseKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabasKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabaseKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabaseKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabasKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabasKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabaseKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumaKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KwabasKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YeziKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbaKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkaKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImiKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsiKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IziKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumaKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumaKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YezKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YeziKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YeziKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YooKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbaKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbaKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkaKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkaKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IiKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImiKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImiKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsiKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsiKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IzKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IziKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IziKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KaKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KuKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumaKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OoKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YezKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YezKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YeziKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YoKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YooKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YooKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbaKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkaKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IiKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IiKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImiKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsiKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IzKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IzKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IziKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KaKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KaKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KuKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KuKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KumKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OoKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OoKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKorinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YezKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YoKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YoKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YooKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("AbKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EkKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IiKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ImKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IsKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IzKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KaKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Korinte II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KuKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OoKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKorinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKorinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YoKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Korinte 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Korinte II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKorinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("Korinte 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 Kor 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2Cor 1:1").osis()).toEqual("2Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASEKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASEKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASEKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMAKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KWABASKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZIKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABAKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKAKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMIKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISIKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZIKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMAKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMAKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZIKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZIKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOOKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABAKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABAKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKAKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKAKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMIKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMIKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISIKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISIKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZIKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZIKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KAKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMAKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OOKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZIKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOOKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOOKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABAKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKAKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMIKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISIKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZIKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KAKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KAKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUMKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OOKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OOKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YEZKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOOKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ABKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("EKKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IIKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IMKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("ISKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IZKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KAKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KORINTE II. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KUKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OOKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("YOKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("IKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KORINTE 2. 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KORINTE II 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("OKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("UKORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("KORINTE 2 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II. KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2. KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("II KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2 KOR 1:1").osis()).toEqual("2Cor.1.1")
		expect(p.parse("2COR 1:1").osis()).toEqual("2Cor.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Cor (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Cor (xh)", function() {
      
		expect(p.parse("KwabaseKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabaseKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabasKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabasKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabaseKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabaseKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabasKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KwabasKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumaKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumaKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YeziKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YeziKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbaKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbaKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkaKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkaKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImiKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImiKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsiKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsiKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IziKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IziKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumaKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumaKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YezKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YezKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YeziKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YeziKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YooKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YooKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbaKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbaKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkaKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkaKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IiKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IiKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImiKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImiKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsiKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsiKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IzKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IzKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IziKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IziKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KaKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KaKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KuKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KuKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KumKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OoKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OoKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YezKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YezKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YoKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YoKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YooKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YooKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("AbKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EkKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IiKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IiKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ImKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IsKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IzKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IzKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KaKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KaKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KuKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KuKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OoKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OoKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKorinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKorinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YoKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YoKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Korinte 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Korinte I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKorinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKorinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Korinte 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("Korinte I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I Kor 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1Cor 1:1").osis()).toEqual("1Cor.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASEKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASEKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASEKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KWABASKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMAKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMAKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZIKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZIKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABAKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABAKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKAKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKAKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMIKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMIKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISIKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISIKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZIKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZIKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMAKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMAKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZIKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZIKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOOKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOOKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABAKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABAKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKAKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKAKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IIKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IIKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMIKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMIKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISIKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISIKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZIKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZIKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KAKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KAKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUMKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OOKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OOKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YEZKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOOKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOOKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ABKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("EKKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IIKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IIKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IMKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("ISKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IZKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KAKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KAKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KUKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OOKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OOKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("YOKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("IKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KORINTE 1. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KORINTE I. 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("OKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("UKORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KORINTE 1 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("KORINTE I 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1. KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I. KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1 KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("I KOR 1:1").osis()).toEqual("1Cor.1.1")
		expect(p.parse("1COR 1:1").osis()).toEqual("1Cor.1.1")
		;
      return true;
    });
  });

  describe("Localized book Gal (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Gal (xh)", function() {
      
		expect(p.parse("KwabaseGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KwabasGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KumaGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YeziGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("AbaGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("EkaGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ImiGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IsiGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IziGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KumGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YezGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YooGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("AbGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("EkGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IiGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ImGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IsGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IzGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KaGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KuGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("OoGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YoGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("OGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("UGalati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Galati 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("Gal 1:1").osis()).toEqual("Gal.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KWABASGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KUMAGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YEZIGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ABAGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("EKAGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IMIGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ISIGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IZIGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KUMGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YEZGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YOOGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ABGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("EKGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IIGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IMGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("ISGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IZGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KAGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KUGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("OOGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("YOGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("IGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("KGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("OGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("UGALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GALATI 1:1").osis()).toEqual("Gal.1.1")
		expect(p.parse("GAL 1:1").osis()).toEqual("Gal.1.1")
		;
      return true;
    });
  });

  describe("Localized book Eph (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Eph (xh)", function() {
      
		expect(p.parse("KwabaseEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KwabasEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KumaEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YeziEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("AbaEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EkaEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ImiEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IsiEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IziEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KumEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YezEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YooEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("AbEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EkEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IiEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ImEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IsEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IzEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KaEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KuEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("OoEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YoEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("OEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("UEfese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Efese 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("Eph 1:1").osis()).toEqual("Eph.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KWABASEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KUMAEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YEZIEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ABAEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EKAEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IMIEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ISIEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IZIEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KUMEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YEZEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YOOEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ABEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EKEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IIEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IMEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("ISEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IZEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KAEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KUEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("OOEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("YOEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("IEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("KEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("OEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("UEFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EFESE 1:1").osis()).toEqual("Eph.1.1")
		expect(p.parse("EPH 1:1").osis()).toEqual("Eph.1.1")
		;
      return true;
    });
  });

  describe("Localized book Phil (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Phil (xh)", function() {
      
		expect(p.parse("KwabaseFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KwabasFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KumaFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YeziFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("AbaFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("EkaFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ImiFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IsiFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IziFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KumFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YezFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YooFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("AbFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("EkFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IiFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ImFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IsFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IzFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KaFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KuFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("OoFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YoFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("OFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("UFilipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipi 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Filipu 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("Phil 1:1").osis()).toEqual("Phil.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KWABASFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KUMAFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YEZIFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ABAFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("EKAFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IMIFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ISIFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IZIFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KUMFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YEZFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YOOFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ABFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("EKFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IIFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IMFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("ISFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IZFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KAFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KUFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("OOFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("YOFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("IFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("KFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("OFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("UFILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPI 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("FILIPU 1:1").osis()).toEqual("Phil.1.1")
		expect(p.parse("PHIL 1:1").osis()).toEqual("Phil.1.1")
		;
      return true;
    });
  });

  describe("Localized book Col (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Col (xh)", function() {
      
		expect(p.parse("KwabaseKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KwabasKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KumaKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YeziKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("AbaKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("EkaKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ImiKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IsiKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IziKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KumKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YezKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YooKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("AbKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("EkKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IiKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ImKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IsKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IzKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KaKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KuKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("OoKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YoKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("OKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("UKolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kolose 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Col 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("Kol 1:1").osis()).toEqual("Col.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KWABASKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KUMAKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YEZIKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ABAKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("EKAKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IMIKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ISIKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IZIKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KUMKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YEZKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YOOKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ABKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("EKKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IIKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IMKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("ISKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IZKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KAKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KUKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("OOKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("YOKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("IKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("OKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("UKOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOLOSE 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("COL 1:1").osis()).toEqual("Col.1.1")
		expect(p.parse("KOL 1:1").osis()).toEqual("Col.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Thess (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Thess (xh)", function() {
      
		expect(p.parse("KwabaseTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabasTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabaseTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabaseTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabasTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabasTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabaseTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumaTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KwabasTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YeziTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbaTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkaTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImiTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsiTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IziTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumaTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumaTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YezTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YeziTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YeziTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YooTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbaTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbaTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkaTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkaTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IiTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImiTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImiTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsiTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsiTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IzTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IziTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IziTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KaTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KuTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumaTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OoTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YezTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YezTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YeziTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YoTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YooTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YooTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbaTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkaTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IiTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IiTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImiTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsiTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IzTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IzTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IziTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KaTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KaTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KuTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KuTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KumTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OoTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OoTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YezTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YoTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YoTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YooTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("AbTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EkTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tesalonika 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IiTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ImTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IsTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IzTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KaTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KuTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OoTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Tesalonika II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YoTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tesalonika 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tesalonika 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Tesalonika 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Tesalonika II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tesalonika 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("Tesalonika 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Tes 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Tes 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2Thess 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Tes 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. Ts 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Tes 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. Ts 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II Ts 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 Ts 1:1").osis()).toEqual("2Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASETESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASETESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASETESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMATESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KWABASTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABATESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKATESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMATESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMATESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOOTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABATESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABATESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKATESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKATESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KATESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMATESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OOTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOOTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOOTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABATESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKATESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KATESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KATESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUMTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OOTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OOTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YEZTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOOTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ABTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("EKTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TESALONIKA 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IMTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ISTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("IZTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KATESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KUTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OOTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("TESALONIKA II. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("YOTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TESALONIKA 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TESALONIKA 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("ITESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("KTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("OTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("TESALONIKA 2. 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("TESALONIKA II 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("UTESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TESALONIKA 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("TESALONIKA 2 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TES 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TES 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2THESS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TES 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II. TS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TES 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2. TS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("II TS 1:1").osis()).toEqual("2Thess.1.1")
		expect(p.parse("2 TS 1:1").osis()).toEqual("2Thess.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Thess (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Thess (xh)", function() {
      
		expect(p.parse("KwabaseTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabaseTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabasTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabasTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabaseTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabaseTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabasTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KwabasTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumaTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumaTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YeziTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YeziTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbaTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbaTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkaTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkaTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImiTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImiTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsiTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsiTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IziTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IziTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumaTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumaTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YezTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YezTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YeziTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YeziTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YooTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YooTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbaTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbaTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkaTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkaTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IiTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IiTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImiTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImiTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsiTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsiTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IzTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IzTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IziTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IziTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KaTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KaTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KuTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KuTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KumTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OoTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OoTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YezTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YezTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YoTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YoTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YooTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YooTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("AbTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EkTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IiTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IiTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ImTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IsTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IzTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IzTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KaTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KaTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KuTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KuTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OoTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OoTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YoTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YoTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tesalonika 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tesalonika 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Tesalonika 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Tesalonika I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tesalonika 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tesalonika 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Tesalonika 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("Tesalonika I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Tes 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1Thess 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Tes 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Tes 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. Ts 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Tes 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. Ts 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 Ts 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I Ts 1:1").osis()).toEqual("1Thess.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASETESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASETESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASETESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KWABASTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMATESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMATESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABATESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABATESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKATESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKATESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMATESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMATESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOOTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOOTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABATESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABATESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKATESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKATESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KATESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KATESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUMTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OOTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OOTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YEZTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOOTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOOTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ABTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("EKTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IMTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ISTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("IZTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KATESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KATESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KUTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OOTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OOTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("YOTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TESALONIKA 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TESALONIKA 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("ITESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("KTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("OTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("TESALONIKA 1. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("TESALONIKA I. 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("UTESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TESALONIKA 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TESALONIKA 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("TESALONIKA 1 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("TESALONIKA I 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TES 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1THESS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TES 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TES 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1. TS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TES 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I. TS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("1 TS 1:1").osis()).toEqual("1Thess.1.1")
		expect(p.parse("I TS 1:1").osis()).toEqual("1Thess.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Tim (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Tim (xh)", function() {
      
		expect(p.parse("KwabaseTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabasTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabaseTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabaseTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabasTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabasTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabaseTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumaTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KwabasTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YeziTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbaTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkaTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImiTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsiTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IziTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumaTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumaTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YezTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YeziTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YeziTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YooTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbaTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbaTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkaTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkaTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IiTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImiTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImiTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsiTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsiTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IzTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IziTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IziTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KaTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KuTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumaTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OoTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YezTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YezTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YeziTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YoTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YooTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YooTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbaTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkaTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IiTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IiTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImiTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsiTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IzTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IzTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IziTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KaTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KaTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KuTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KuTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KumTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OoTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OoTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTimoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YezTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YoTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YoTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YooTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("AbTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EkTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IiTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ImTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IsTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IzTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KaTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KuTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OoTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Timoti II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTimoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTimoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YoTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Timoti 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Timoti II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTimoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("Timoti 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 Tim 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2Tim 1:1").osis()).toEqual("2Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASETIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASETIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASETIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMATIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KWABASTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABATIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKATIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMATIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMATIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOOTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABATIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABATIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKATIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKATIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KATIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMATIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OOTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOOTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOOTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABATIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKATIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KATIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KATIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUMTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OOTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OOTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YEZTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOOTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ABTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("EKTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IMTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ISTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("IZTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KATIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KUTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OOTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("TIMOTI II. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("YOTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("ITIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("KTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("OTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("TIMOTI 2. 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("TIMOTI II 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("UTIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("TIMOTI 2 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II. TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2. TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("II TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2 TIM 1:1").osis()).toEqual("2Tim.1.1")
		expect(p.parse("2TIM 1:1").osis()).toEqual("2Tim.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Tim (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Tim (xh)", function() {
      
		expect(p.parse("KwabaseTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabaseTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabasTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabasTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabaseTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabaseTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabasTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KwabasTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumaTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumaTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YeziTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YeziTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbaTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbaTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkaTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkaTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImiTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImiTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsiTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsiTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IziTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IziTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumaTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumaTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YezTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YezTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YeziTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YeziTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YooTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YooTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbaTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbaTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkaTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkaTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IiTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IiTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImiTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImiTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsiTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsiTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IzTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IzTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IziTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IziTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KaTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KaTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KuTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KuTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KumTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OoTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OoTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YezTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YezTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YoTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YoTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YooTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YooTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("AbTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EkTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IiTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IiTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ImTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IsTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IzTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IzTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KaTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KaTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KuTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KuTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OoTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OoTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTimoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTimoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YoTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YoTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Timoti 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Timoti I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTimoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTimoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Timoti 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("Timoti I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I Tim 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1Tim 1:1").osis()).toEqual("1Tim.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASETIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASETIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASETIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KWABASTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMATIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMATIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABATIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABATIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKATIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKATIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMATIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMATIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOOTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOOTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABATIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABATIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKATIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKATIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KATIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KATIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUMTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OOTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OOTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YEZTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOOTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOOTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ABTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("EKTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IMTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ISTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("IZTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KATIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KATIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KUTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OOTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OOTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("YOTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("ITIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("KTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("OTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("TIMOTI 1. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("TIMOTI I. 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("UTIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("TIMOTI 1 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("TIMOTI I 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1. TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I. TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1 TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("I TIM 1:1").osis()).toEqual("1Tim.1.1")
		expect(p.parse("1TIM 1:1").osis()).toEqual("1Tim.1.1")
		;
      return true;
    });
  });

  describe("Localized book Titus (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Titus (xh)", function() {
      
		expect(p.parse("KwabaseTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KwabasTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KumaTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YeziTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("AbaTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("EkaTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ImiTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IsiTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IziTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KumTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YezTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YooTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("AbTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("EkTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IiTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ImTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IsTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IzTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KaTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KuTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("OoTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YoTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ITito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("OTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Titus 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("UTito 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("Tito 1:1").osis()).toEqual("Titus.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASETITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KWABASTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KUMATITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YEZITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ABATITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("EKATITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IMITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ISITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IZITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KUMTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YEZTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YOOTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ABTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("EKTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IMTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ISTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("IZTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KATITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KUTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("OOTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("YOTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("ITITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("KTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("OTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TITUS 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("UTITO 1:1").osis()).toEqual("Titus.1.1")
		expect(p.parse("TITO 1:1").osis()).toEqual("Titus.1.1")
		;
      return true;
    });
  });

  describe("Localized book Phlm (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Phlm (xh)", function() {
      
		expect(p.parse("KwabaseFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KwabasFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KumaFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YeziFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("AbaFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("EkaFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ImiFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IsiFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IziFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KumFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YezFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YooFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("AbFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("EkFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IiFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ImFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IsFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IzFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KaFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KuFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("OoFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YoFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("OFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("UFilemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Filemon 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("Phlm 1:1").osis()).toEqual("Phlm.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KWABASFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KUMAFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YEZIFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ABAFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("EKAFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IMIFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ISIFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IZIFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KUMFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YEZFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YOOFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ABFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("EKFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IIFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IMFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("ISFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IZFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KAFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KUFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("OOFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("YOFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("IFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("KFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("OFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("UFILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("FILEMON 1:1").osis()).toEqual("Phlm.1.1")
		expect(p.parse("PHLM 1:1").osis()).toEqual("Phlm.1.1")
		;
      return true;
    });
  });

  describe("Localized book Heb (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Heb (xh)", function() {
      
		expect(p.parse("KwabaseHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KwabasHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KumaHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YeziHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("AbaHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("EkaHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ImiHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IsiHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IziHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KumHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YezHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YooHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("AbHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("EkHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IiHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ImHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IsHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IzHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KaHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KuHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("OoHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YoHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("OHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("UHebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Hebhere 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("Heb 1:1").osis()).toEqual("Heb.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KWABASHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KUMAHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YEZIHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ABAHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("EKAHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IMIHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ISIHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IZIHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KUMHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YEZHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YOOHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ABHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("EKHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IIHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IMHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("ISHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IZHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KAHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KUHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("OOHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("YOHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("IHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("KHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("OHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("UHEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEBHERE 1:1").osis()).toEqual("Heb.1.1")
		expect(p.parse("HEB 1:1").osis()).toEqual("Heb.1.1")
		;
      return true;
    });
  });

  describe("Localized book Jas (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Jas (xh)", function() {
      
		expect(p.parse("KwabaseYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KwabasYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KumaYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YeziYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("AbaYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("EkaYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ImiYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IsiYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IziYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KumYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YezYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YooYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("AbYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("EkYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IiYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ImYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IsYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IzYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KaYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KuYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("OoYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YoYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("OYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("UYakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Yakobi 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("Jas 1:1").osis()).toEqual("Jas.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KWABASYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KUMAYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YEZIYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ABAYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("EKAYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IMIYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ISIYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IZIYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KUMYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YEZYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YOOYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ABYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("EKYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IIYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IMYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("ISYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IZYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KAYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KUYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("OOYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YOYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("IYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("KYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("OYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("UYAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("YAKOBI 1:1").osis()).toEqual("Jas.1.1")
		expect(p.parse("JAS 1:1").osis()).toEqual("Jas.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Pet (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Pet (xh)", function() {
      
		expect(p.parse("KwabasePetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasePetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasePetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasePetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumaPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KwabasPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YeziPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbaPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkaPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImiPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsiPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IziPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumaPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumaPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YezPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YeziPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YeziPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YooPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbaPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbaPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkaPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkaPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IiPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImiPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImiPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsiPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsiPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IzPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IziPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IziPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KaPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KuPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumaPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OoPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YezPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YezPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YeziPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YoPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YooPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YooPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbaPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkaPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IiPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IiPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImiPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsiPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IzPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IzPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IziPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KaPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KaPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KuPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KuPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KumPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OoPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OoPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPetros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YezPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YoPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YoPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YooPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("AbPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EkPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IiPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ImPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IsPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IzPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KaPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KuPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OoPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Petros II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPetros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPetros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YoPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Petros 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Petros II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPetros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("Petros 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Ptr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Petr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Ptr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Ptr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Pet 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Ptr 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 Pt 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2Pet 1:1").osis()).toEqual("2Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASEPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASEPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASEPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMAPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KWABASPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZIPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABAPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKAPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMIPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISIPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZIPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMAPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMAPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZIPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZIPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOOPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABAPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABAPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKAPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKAPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IIPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMIPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMIPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISIPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISIPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZIPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZIPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KAPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMAPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OOPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZIPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOOPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOOPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABAPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKAPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IIPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IIPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMIPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISIPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZIPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KAPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KAPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUMPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OOPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OOPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YEZPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOOPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ABPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("EKPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IIPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IMPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("ISPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IZPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KAPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KUPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OOPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("PETROS II. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("YOPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("IPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("KPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("OPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("PETROS 2. 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("PETROS II 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("UPETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("PETROS 2 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PETR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II. PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PET 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PTR 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2. PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("II PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2 PT 1:1").osis()).toEqual("2Pet.1.1")
		expect(p.parse("2PET 1:1").osis()).toEqual("2Pet.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Pet (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Pet (xh)", function() {
      
		expect(p.parse("KwabasePetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasePetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasePetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasePetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KwabasPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumaPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumaPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YeziPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YeziPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbaPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbaPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkaPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkaPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImiPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImiPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsiPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsiPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IziPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IziPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumaPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumaPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YezPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YezPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YeziPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YeziPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YooPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YooPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbaPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbaPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkaPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkaPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IiPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IiPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImiPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImiPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsiPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsiPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IzPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IzPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IziPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IziPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KaPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KaPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KuPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KuPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KumPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OoPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OoPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YezPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YezPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YoPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YoPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YooPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YooPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("AbPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EkPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IiPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IiPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ImPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IsPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IzPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IzPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KaPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KaPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KuPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KuPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OoPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OoPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPetros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPetros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YoPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YoPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Petros 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Petros I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPetros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPetros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Petros 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("Petros I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Ptr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Petr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Ptr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Ptr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Ptr 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 Pt 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1Pet 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I Pt 1:1").osis()).toEqual("1Pet.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASEPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASEPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASEPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KWABASPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMAPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMAPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZIPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZIPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABAPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABAPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKAPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKAPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMIPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMIPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISIPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISIPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZIPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZIPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMAPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMAPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZIPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZIPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOOPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOOPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABAPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABAPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKAPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKAPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IIPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IIPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMIPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMIPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISIPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISIPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZIPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZIPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KAPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KAPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUMPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OOPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OOPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YEZPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOOPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOOPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ABPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("EKPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IIPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IIPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IMPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("ISPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IZPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KAPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KAPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KUPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OOPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OOPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("YOPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("IPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("KPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("OPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PETROS 1. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PETROS I. 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("UPETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PETROS 1 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("PETROS I 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PETR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1. PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PTR 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I. PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1 PT 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("1PET 1:1").osis()).toEqual("1Pet.1.1")
		expect(p.parse("I PT 1:1").osis()).toEqual("1Pet.1.1")
		;
      return true;
    });
  });

  describe("Localized book Jude (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Jude (xh)", function() {
      
		expect(p.parse("KwabaseYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KwabasYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KumaYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YeziYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("AbaYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("EkaYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ImiYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IsiYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IziYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KumYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YezYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YooYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("AbYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("EkYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IiYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ImYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IsYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IzYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KaYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KuYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("OoYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YoYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("OYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("UYuda 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Jude 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("Yuda 1:1").osis()).toEqual("Jude.1.1")
		p.include_apocrypha(false)
		expect(p.parse("KWABASEYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KWABASYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KUMAYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YEZIYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ABAYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("EKAYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IMIYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ISIYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IZIYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KUMYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YEZYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YOOYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ABYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("EKYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IIYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IMYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("ISYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IZYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KAYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KUYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("OOYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YOYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("IYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("KYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("OYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("UYUDA 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("JUDE 1:1").osis()).toEqual("Jude.1.1")
		expect(p.parse("YUDA 1:1").osis()).toEqual("Jude.1.1")
		;
      return true;
    });
  });

  describe("Localized book Tob (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Tob (xh)", function() {
      
		expect(p.parse("Tob 1:1").osis()).toEqual("Tob.1.1")
		;
      return true;
    });
  });

  describe("Localized book Jdt (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Jdt (xh)", function() {
      
		expect(p.parse("Jdt 1:1").osis()).toEqual("Jdt.1.1")
		;
      return true;
    });
  });

  describe("Localized book Bar (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Bar (xh)", function() {
      
		expect(p.parse("Bar 1:1").osis()).toEqual("Bar.1.1")
		;
      return true;
    });
  });

  describe("Localized book Sus (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: Sus (xh)", function() {
      
		expect(p.parse("Sus 1:1").osis()).toEqual("Sus.1.1")
		;
      return true;
    });
  });

  describe("Localized book 2Macc (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 2Macc (xh)", function() {
      
		expect(p.parse("2Macc 1:1").osis()).toEqual("2Macc.1.1")
		;
      return true;
    });
  });

  describe("Localized book 3Macc (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 3Macc (xh)", function() {
      
		expect(p.parse("3Macc 1:1").osis()).toEqual("3Macc.1.1")
		;
      return true;
    });
  });

  describe("Localized book 4Macc (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 4Macc (xh)", function() {
      
		expect(p.parse("4Macc 1:1").osis()).toEqual("4Macc.1.1")
		;
      return true;
    });
  });

  describe("Localized book 1Macc (xh)", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    return it("should handle book: 1Macc (xh)", function() {
      
		expect(p.parse("1Macc 1:1").osis()).toEqual("1Macc.1.1")
		;
      return true;
    });
  });

  describe("Miscellaneous tests", function() {
    var p;
    p = {};
    beforeEach(function() {
      p = new bcv_parser;
      p.set_options({
        book_alone_strategy: "ignore",
        book_sequence_strategy: "ignore",
        osis_compaction_strategy: "bc",
        captive_end_digits_strategy: "delete"
      });
      return p.include_apocrypha(true);
    });
    it("should return the expected language", function() {
      return expect(p.languages).toEqual(["xh"]);
    });
    it("should handle ranges (xh)", function() {
      expect(p.parse("Titus 1:1 ukuya 2").osis()).toEqual("Titus.1.1-Titus.1.2");
      expect(p.parse("Matt 1ukuya2").osis()).toEqual("Matt.1-Matt.2");
      return expect(p.parse("Phlm 2 UKUYA 3").osis()).toEqual("Phlm.1.2-Phlm.1.3");
    });
    it("should handle chapters (xh)", function() {
      expect(p.parse("Titus 1:1, isahluko 2").osis()).toEqual("Titus.1.1,Titus.2");
      return expect(p.parse("Matt 3:4 ISAHLUKO 6").osis()).toEqual("Matt.3.4,Matt.6");
    });
    it("should handle verses (xh)", function() {
      expect(p.parse("Exod 1:1 ivesi 3").osis()).toEqual("Exod.1.1,Exod.1.3");
      return expect(p.parse("Phlm IVESI 6").osis()).toEqual("Phlm.1.6");
    });
    it("should handle 'and' (xh)", function() {
      expect(p.parse("Exod 1:1 kwaye 3").osis()).toEqual("Exod.1.1,Exod.1.3");
      return expect(p.parse("Phlm 2 KWAYE 6").osis()).toEqual("Phlm.1.2,Phlm.1.6");
    });
    it("should handle titles (xh)", function() {
      expect(p.parse("Ps 3 title, 4:2, 5:title").osis()).toEqual("Ps.3.1,Ps.4.2,Ps.5.1");
      return expect(p.parse("PS 3 TITLE, 4:2, 5:TITLE").osis()).toEqual("Ps.3.1,Ps.4.2,Ps.5.1");
    });
    it("should handle 'ff' (xh)", function() {
      expect(p.parse("Rev 3ff, 4:2ff").osis()).toEqual("Rev.3-Rev.22,Rev.4.2-Rev.4.11");
      return expect(p.parse("REV 3 FF, 4:2 FF").osis()).toEqual("Rev.3-Rev.22,Rev.4.2-Rev.4.11");
    });
    it("should handle translations (xh)", function() {
      expect(p.parse("Lev 1 (xho96)").osis_and_translations()).toEqual([["Lev.1", "xho96"]]);
      return expect(p.parse("lev 1 xho96").osis_and_translations()).toEqual([["Lev.1", "xho96"]]);
    });
    it("should handle book ranges (xh)", function() {
      p.set_options({
        book_alone_strategy: "full",
        book_range_strategy: "include"
      });
      expect(p.parse("1 ukuya 3  Yh").osis()).toEqual("1John.1-3John.1");
      return expect(p.parse("1 ukuya 3  Yoh").osis()).toEqual("1John.1-3John.1");
    });
    return it("should handle boundaries (xh)", function() {
      p.set_options({
        book_alone_strategy: "full"
      });
      expect(p.parse("\u2014Matt\u2014").osis()).toEqual("Matt.1-Matt.28");
      return expect(p.parse("\u201cMatt 1:1\u201d").osis()).toEqual("Matt.1.1");
    });
  });

}).call(this);
